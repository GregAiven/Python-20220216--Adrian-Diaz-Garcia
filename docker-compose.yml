version: "3.9"

services:
  etl:
    build:
      context: etl
      dockerfile: Dockerfile
    image: aiven-etl:latest
    environment:
      - LOG_LEVEL=DEBUG
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=postgres
      - PGUSER=aivenu
      - PGPASSWORD=aivenp
      - POSTGRES_DB=aiven
      - KAFKA_GROUP_ID=web_checks_groups
      - KAFKA_BOOTSTRAP_SERVER=kafka:9093
      - KAFKA_TOPIC=web_checks
      - KAFKA_BATCH_SIZE=5
    entrypoint: [ "./etl/docker_entrypoint.sh" ] # It makes use of dockerize to wait for kafka and db to be ready
    command: [ "./etl/docker_command.sh" ]
    depends_on:
      - postgres
      - kafka
    volumes:
      - ./etl:/app/etl # Mount code inside the container for local dev

  monitor:
    restart: always
    build:
      context: monitor
      dockerfile: Dockerfile
    image: aiven-monitor:latest
    environment:
      - LOG_LEVEL=INFO
      - KAFKA_BOOTSTRAP_SERVER=kafka:9093
      - KAFKA_TOPIC=web_checks
    entrypoint: ["./monitor/docker_entrypoint.sh"] # It makes use of dockerize to wait for kafka to be ready
    command: ["./monitor/docker_command.sh"]
    depends_on:
      - kafka
    volumes:
      - ./monitor:/app/monitor # Mount code inside the container for local dev

  postgres:
    restart: always
    image: postgres:14.1-bullseye
    environment:
      - POSTGRES_PASSWORD=aivenp
      - POSTGRES_USER=aivenu
      - POSTGRES_DB=
    ports:  # Exposing port for local development
      - "5432:5432"

  # Provision instructions
  # from https://towardsdatascience.com/kafka-docker-python-408baf0e1088
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
     - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
     - "9092:9092"
    expose:
     - "9093"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "topic_test:1:1"
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock

